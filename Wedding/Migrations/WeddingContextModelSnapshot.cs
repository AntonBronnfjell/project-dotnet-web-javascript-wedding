// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wedding.Models;

#nullable disable

namespace Wedding.Migrations
{
    [DbContext(typeof(WeddingContext))]
    partial class WeddingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Wedding.Models.Assistance", b =>
                {
                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Uuid")
                        .HasName("assitance_table_uuid_primary");

                    b.ToTable("Assistances");
                });

            modelBuilder.Entity("Wedding.Models.Attendance", b =>
                {
                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Uuid")
                        .HasName("attendance_table_uuid_primary");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("Wedding.Models.Desert", b =>
                {
                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Uuid")
                        .HasName("desert_table_uuid_primary");

                    b.ToTable("Deserts");
                });

            modelBuilder.Entity("Wedding.Models.Extra", b =>
                {
                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Uuid")
                        .HasName("extra_peers_table_uuid_primary");

                    b.ToTable("Extras");
                });

            modelBuilder.Entity("Wedding.Models.Food", b =>
                {
                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Uuid")
                        .HasName("food_table_uuid_primary");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("Wedding.Models.Guest", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Uuid")
                        .HasName("invited_table_uuid_primary");

                    b.HasIndex("Code");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("Wedding.Models.Kid", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Kids");
                });

            modelBuilder.Entity("Wedding.Models.Peer", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Peers");
                });

            modelBuilder.Entity("Wedding.Models.Redeem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("Code")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "qr_codes_table_id_index");

                    b.ToTable("Redeems");
                });

            modelBuilder.Entity("Wedding.Models.Assistance", b =>
                {
                    b.HasOne("Wedding.Models.Extra", "Uu")
                        .WithOne("Assistance")
                        .HasForeignKey("Wedding.Models.Assistance", "Uuid")
                        .IsRequired()
                        .HasConstraintName("FK_assitance_table_extra_peers_table");

                    b.HasOne("Wedding.Models.Guest", "UuNavigation")
                        .WithOne("Assistance")
                        .HasForeignKey("Wedding.Models.Assistance", "Uuid")
                        .IsRequired()
                        .HasConstraintName("FK_assitance_table_invited_table");

                    b.Navigation("Uu");

                    b.Navigation("UuNavigation");
                });

            modelBuilder.Entity("Wedding.Models.Attendance", b =>
                {
                    b.HasOne("Wedding.Models.Extra", "Uu")
                        .WithOne("Attendance")
                        .HasForeignKey("Wedding.Models.Attendance", "Uuid")
                        .IsRequired()
                        .HasConstraintName("FK_attendance_table_extra_peers_table");

                    b.HasOne("Wedding.Models.Guest", "UuNavigation")
                        .WithOne("Attendance")
                        .HasForeignKey("Wedding.Models.Attendance", "Uuid")
                        .IsRequired()
                        .HasConstraintName("FK_attendance_table_invited_table");

                    b.Navigation("Uu");

                    b.Navigation("UuNavigation");
                });

            modelBuilder.Entity("Wedding.Models.Desert", b =>
                {
                    b.HasOne("Wedding.Models.Extra", "Uu")
                        .WithOne("Desert")
                        .HasForeignKey("Wedding.Models.Desert", "Uuid")
                        .IsRequired()
                        .HasConstraintName("FK_desert_table_extra_peers_table");

                    b.HasOne("Wedding.Models.Guest", "UuNavigation")
                        .WithOne("Desert")
                        .HasForeignKey("Wedding.Models.Desert", "Uuid")
                        .IsRequired()
                        .HasConstraintName("FK_desert_table_invited_table");

                    b.Navigation("Uu");

                    b.Navigation("UuNavigation");
                });

            modelBuilder.Entity("Wedding.Models.Food", b =>
                {
                    b.HasOne("Wedding.Models.Extra", "Uu")
                        .WithOne("Food")
                        .HasForeignKey("Wedding.Models.Food", "Uuid")
                        .IsRequired()
                        .HasConstraintName("FK_food_table_extra_peers_table");

                    b.HasOne("Wedding.Models.Guest", "UuNavigation")
                        .WithOne("Food")
                        .HasForeignKey("Wedding.Models.Food", "Uuid")
                        .IsRequired()
                        .HasConstraintName("FK_food_table_invited_table");

                    b.Navigation("Uu");

                    b.Navigation("UuNavigation");
                });

            modelBuilder.Entity("Wedding.Models.Guest", b =>
                {
                    b.HasOne("Wedding.Models.Redeem", "CodeNavigation")
                        .WithMany("Guests")
                        .HasForeignKey("Code")
                        .IsRequired()
                        .HasConstraintName("invited_table_code_foreign");

                    b.Navigation("CodeNavigation");
                });

            modelBuilder.Entity("Wedding.Models.Kid", b =>
                {
                    b.HasOne("Wedding.Models.Redeem", "IdNavigation")
                        .WithOne("Kid")
                        .HasForeignKey("Wedding.Models.Kid", "Id")
                        .IsRequired()
                        .HasConstraintName("FK_kids_table_qr_codes_table");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("Wedding.Models.Peer", b =>
                {
                    b.HasOne("Wedding.Models.Redeem", "IdNavigation")
                        .WithOne("Peer")
                        .HasForeignKey("Wedding.Models.Peer", "Id")
                        .IsRequired()
                        .HasConstraintName("FK_peers_table_qr_codes_table");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("Wedding.Models.Extra", b =>
                {
                    b.Navigation("Assistance");

                    b.Navigation("Attendance");

                    b.Navigation("Desert");

                    b.Navigation("Food");
                });

            modelBuilder.Entity("Wedding.Models.Guest", b =>
                {
                    b.Navigation("Assistance");

                    b.Navigation("Attendance");

                    b.Navigation("Desert");

                    b.Navigation("Food");
                });

            modelBuilder.Entity("Wedding.Models.Redeem", b =>
                {
                    b.Navigation("Guests");

                    b.Navigation("Kid");

                    b.Navigation("Peer");
                });
#pragma warning restore 612, 618
        }
    }
}
