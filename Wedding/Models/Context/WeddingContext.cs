// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Wedding.Models
{
    public partial class WeddingContext : DbContext
    {
        public WeddingContext()
        {
        }

        public WeddingContext(DbContextOptions<WeddingContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Assistance> Assistances { get; set; }
        public virtual DbSet<Attendance> Attendances { get; set; }
        public virtual DbSet<Desert> Deserts { get; set; }
        public virtual DbSet<Extra> Extras { get; set; }
        public virtual DbSet<Food> Foods { get; set; }
        public virtual DbSet<Guest> Guests { get; set; }
        public virtual DbSet<Kid> Kids { get; set; }
        public virtual DbSet<Peer> Peers { get; set; }
        public virtual DbSet<Redeem> Redeems { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Assistance>(entity =>
            {
                entity.HasKey(e => e.Uuid)
                    .HasName("assitance_table_uuid_primary");

                entity.Property(e => e.Uuid).ValueGeneratedNever();

                entity.HasOne(d => d.Uu)
                    .WithOne(p => p.Assistance)
                    .HasForeignKey<Assistance>(d => d.Uuid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_assitance_table_extra_peers_table");

                entity.HasOne(d => d.UuNavigation)
                    .WithOne(p => p.Assistance)
                    .HasForeignKey<Assistance>(d => d.Uuid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_assitance_table_invited_table");
            });

            modelBuilder.Entity<Attendance>(entity =>
            {
                entity.HasKey(e => e.Uuid)
                    .HasName("attendance_table_uuid_primary");

                entity.Property(e => e.Uuid).ValueGeneratedNever();

                entity.HasOne(d => d.Uu)
                    .WithOne(p => p.Attendance)
                    .HasForeignKey<Attendance>(d => d.Uuid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_attendance_table_extra_peers_table");

                entity.HasOne(d => d.UuNavigation)
                    .WithOne(p => p.Attendance)
                    .HasForeignKey<Attendance>(d => d.Uuid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_attendance_table_invited_table");
            });

            modelBuilder.Entity<Desert>(entity =>
            {
                entity.HasKey(e => e.Uuid)
                    .HasName("desert_table_uuid_primary");

                entity.Property(e => e.Uuid).ValueGeneratedNever();

                entity.HasOne(d => d.Uu)
                    .WithOne(p => p.Desert)
                    .HasForeignKey<Desert>(d => d.Uuid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_desert_table_extra_peers_table");

                entity.HasOne(d => d.UuNavigation)
                    .WithOne(p => p.Desert)
                    .HasForeignKey<Desert>(d => d.Uuid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_desert_table_invited_table");
            });

            modelBuilder.Entity<Extra>(entity =>
            {
                entity.HasKey(e => e.Uuid)
                    .HasName("extra_peers_table_uuid_primary");

                entity.Property(e => e.Uuid).ValueGeneratedNever();

                entity.Property(e => e.User)
                    .IsRequired()
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<Food>(entity =>
            {
                entity.HasKey(e => e.Uuid)
                    .HasName("food_table_uuid_primary");

                entity.Property(e => e.Uuid).ValueGeneratedNever();

                entity.HasOne(d => d.Uu)
                    .WithOne(p => p.Food)
                    .HasForeignKey<Food>(d => d.Uuid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_food_table_extra_peers_table");

                entity.HasOne(d => d.UuNavigation)
                    .WithOne(p => p.Food)
                    .HasForeignKey<Food>(d => d.Uuid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_food_table_invited_table");
            });

            modelBuilder.Entity<Guest>(entity =>
            {
                entity.HasKey(e => e.Uuid)
                    .HasName("invited_table_uuid_primary");

                entity.Property(e => e.Uuid).HasDefaultValueSql("(newid())");

                entity.Property(e => e.User)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.HasOne(d => d.CodeNavigation)
                    .WithMany(p => p.Guests)
                    .HasForeignKey(d => d.Code)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("invited_table_code_foreign");
            });

            modelBuilder.Entity<Kid>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.HasOne(d => d.IdNavigation)
                    .WithOne(p => p.Kid)
                    .HasForeignKey<Kid>(d => d.Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_kids_table_qr_codes_table");
            });

            modelBuilder.Entity<Peer>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.HasOne(d => d.IdNavigation)
                    .WithOne(p => p.Peer)
                    .HasForeignKey<Peer>(d => d.Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_peers_table_qr_codes_table");
            });

            modelBuilder.Entity<Redeem>(entity =>
            {
                entity.HasIndex(e => e.Id, "qr_codes_table_id_index");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}